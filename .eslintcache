[{"/home/alyssa/code/projects/engineering-manager-proto-1/src/index.js":"1","/home/alyssa/code/projects/engineering-manager-proto-1/src/App.js":"2","/home/alyssa/code/projects/engineering-manager-proto-1/src/dataScreen1.js":"3","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Containers/Screen2Container.js":"4","/home/alyssa/code/projects/engineering-manager-proto-1/src/dataScreen2.js":"5","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Containers/DropdownsContainer2.js":"6","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Components/DisplayDropdown2.js":"7","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Containers/TableContainer2.js":"8","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Components/TableScreen2.js":"9","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Components/Triangles.js":"10","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Containers/Screen3Container.js":"11","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/PartInfo.js":"12","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/DesignReviewProcess.js":"13","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/RiskAlerts.js":"14","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/PredictedRisk.js":"15","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/WorkflowsExecuted.js":"16","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/SuggestedActions.js":"17","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/RiskBar.js":"18","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/DesignReviewChart.js":"19","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/EllipsePoint.js":"20","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Components/TopTriangleIcon.js":"21","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Components/BottomTriangleIcon.js":"22","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Containers/Screen4Container.js":"23","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Containers/DropdownsContainer4.js":"24","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Components/DisplayDropdown4.js":"25","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Containers/TableContainer4.js":"26","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Components/TableScreen4.js":"27","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Components/PredictedRiskRectangle.js":"28","/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Containers/TrendsPageContainer.js":"29","/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Containers/TrendsDropdownsContainer.js":"30","/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Components/TrendsDropdowns.js":"31","/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Containers/TrendsChartContainer.js":"32","/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Components/TrendsChart.js":"33","/home/alyssa/code/projects/engineering-manager-proto-1/src/trendsData.js":"34","/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Components/TrendsLegend.js":"35","/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Containers/Screen1Container.js":"36","/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Containers/DropdownsContainer1.js":"37","/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Containers/TableContainer1.js":"38","/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Components/DisplayDropdown1.js":"39","/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Components/TableScreen1.js":"40","/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Components/PercentageMetricBar.js":"41"},{"size":272,"mtime":1609632473127,"results":"42","hashOfConfig":"43"},{"size":3348,"mtime":1612991074081,"results":"44","hashOfConfig":"43"},{"size":17737,"mtime":1612286634420,"results":"45","hashOfConfig":"43"},{"size":1178,"mtime":1609890216147,"results":"46","hashOfConfig":"43"},{"size":231389,"mtime":1609633249047,"results":"47","hashOfConfig":"43"},{"size":2345,"mtime":1611341155310,"results":"48","hashOfConfig":"43"},{"size":807,"mtime":1609634482367,"results":"49","hashOfConfig":"43"},{"size":302,"mtime":1609634741567,"results":"50","hashOfConfig":"43"},{"size":2442,"mtime":1609881144287,"results":"51","hashOfConfig":"43"},{"size":1432,"mtime":1609888539937,"results":"52","hashOfConfig":"43"},{"size":1027,"mtime":1612991614521,"results":"53","hashOfConfig":"43"},{"size":1632,"mtime":1612991642871,"results":"54","hashOfConfig":"43"},{"size":1843,"mtime":1612991672001,"results":"55","hashOfConfig":"43"},{"size":1921,"mtime":1612991664461,"results":"56","hashOfConfig":"43"},{"size":1390,"mtime":1612991772031,"results":"57","hashOfConfig":"43"},{"size":1334,"mtime":1612991756711,"results":"58","hashOfConfig":"43"},{"size":1397,"mtime":1612991737701,"results":"59","hashOfConfig":"43"},{"size":1341,"mtime":1612991512921,"results":"60","hashOfConfig":"43"},{"size":5668,"mtime":1611460954970,"results":"61","hashOfConfig":"43"},{"size":355,"mtime":1609821317727,"results":"62","hashOfConfig":"43"},{"size":443,"mtime":1609891183757,"results":"63","hashOfConfig":"43"},{"size":449,"mtime":1609891337687,"results":"64","hashOfConfig":"43"},{"size":1900,"mtime":1611341155320,"results":"65","hashOfConfig":"43"},{"size":860,"mtime":1611341155320,"results":"66","hashOfConfig":"43"},{"size":656,"mtime":1611341155320,"results":"67","hashOfConfig":"43"},{"size":185,"mtime":1611341155320,"results":"68","hashOfConfig":"43"},{"size":2179,"mtime":1612294476690,"results":"69","hashOfConfig":"43"},{"size":904,"mtime":1612294091240,"results":"70","hashOfConfig":"43"},{"size":1103,"mtime":1612805660841,"results":"71","hashOfConfig":"43"},{"size":1396,"mtime":1612805249001,"results":"72","hashOfConfig":"43"},{"size":806,"mtime":1612805330351,"results":"73","hashOfConfig":"43"},{"size":890,"mtime":1612805635561,"results":"74","hashOfConfig":"43"},{"size":4364,"mtime":1612807286481,"results":"75","hashOfConfig":"43"},{"size":84592,"mtime":1612390716060,"results":"76","hashOfConfig":"43"},{"size":833,"mtime":1612803383841,"results":"77","hashOfConfig":"43"},{"size":1201,"mtime":1612989993541,"results":"78","hashOfConfig":"43"},{"size":2016,"mtime":1611341155310,"results":"79","hashOfConfig":"43"},{"size":326,"mtime":1609631630637,"results":"80","hashOfConfig":"43"},{"size":883,"mtime":1609873569707,"results":"81","hashOfConfig":"43"},{"size":7869,"mtime":1612990835981,"results":"82","hashOfConfig":"43"},{"size":2004,"mtime":1610316427820,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1xkrzvd",{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alyssa/code/projects/engineering-manager-proto-1/src/index.js",[],["178","179"],"/home/alyssa/code/projects/engineering-manager-proto-1/src/App.js",["180","181"],"/home/alyssa/code/projects/engineering-manager-proto-1/src/dataScreen1.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Containers/Screen2Container.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/dataScreen2.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Containers/DropdownsContainer2.js",["182"],"import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DisplayDropdown2 from '../Components/DisplayDropdown2';\nimport {v4 as uuidv4} from 'uuid';\nimport TopTriangleIcon from '../Components/TopTriangleIcon';\nimport BottomTriangleIcon from '../Components/BottomTriangleIcon';\n\nconst DropdownsContainer2 = ({ productFilter, handleFilter, percentageMetric, onPercentageMetricChange}) => {\n  const mapDropdowns = () => {\n    return dropdownsList.map((dropdown) => <DisplayDropdown2 productFilter={productFilter} handleFilter={handleFilter} key={uuidv4()} info={dropdown}  />);\n  }\n\n \n\n  return(\n    <Row className=\"d-flex justify-content-between\">\n      {mapDropdowns()}\n      <Col xs={7}>\n      </Col>\n      <Col>\n        <Row>\n          <Col>\n            {/* <Form onChange={event => onPercentageMetricChange(event.target.value)}>\n              <div key=\"default-radio\" className=\"mb-3\">\n                <Form.Check type=\"radio\" className=\"font-small\" checked={percentageMetric === \"% Design Errors\"} id=\"design-errors\" label=\"% Design errors\" value=\"% Design Errors\" />\n                <Form.Check type=\"radio\" className=\"font-small\"  checked={percentageMetric === \"% Schedule delays\"} id=\"schedule-delays\" label=\"% Schedule delays\" value=\"% Schedule delays\" />\n                <Form.Check type=\"radio\" className=\"font-small\"  checked={percentageMetric === \"% Cost overrun\"} id=\"cost-overrun\" label=\"% Cost overrrun\" value=\"% Cost overrun\" />\n              </div>\n            </Form> */}\n          </Col>\n        </Row>\n        <Row noGutters className=\"mt-3 m-0\">\n          <Col xs={1}>\n            <TopTriangleIcon />\n          </Col>\n          <Col className=\"font-small\">\n            &nbsp;&nbsp;&nbsp; Design errors\n          </Col>\n        </Row>\n        <Row noGutters className=\"m-0\">\n        <Col xs={1}>\n            <BottomTriangleIcon />\n          </Col>\n          <Col className=\"font-small\">\n            &nbsp;&nbsp;&nbsp; Schedule delays\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default DropdownsContainer2;\n\nconst dropdownsList = [\n  {\n    title: \"Select Product?\",\n    options: [\n      \"(All)\",\n      \"Product 1\",\n      \"Product 2\",\n      \"Product 3\",\n      \"Product 4\",\n      \"Product 5\"\n    ]\n  },\n];","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Components/DisplayDropdown2.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Containers/TableContainer2.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Components/TableScreen2.js",["183","184","185","186","187","188","189","190","191"],"import React, { useEffect, useState, useRef } from 'react';\nimport Konva from 'konva';\nimport { Stage, Layer, Line } from 'react-konva';\nimport Table from 'react-bootstrap/Table';\nimport { v4 as uuidv4 } from 'uuid';\nimport Triangles from './Triangles';\nimport EllipsePoint from '../../Screen3/Components/EllipsePoint';\n\nconst TableScreen2 = ({ productFilter, data, percentageMetric }) => {\n    \n  // ok this is dumb you know all the products and departments just set them manually\n  // if you have to do it programmatically later you can do that with the help of a solid backend\n\n  const checkIfDisplayed = (product) => {\n    if (productFilter !== '(All)') {\n      if (productFilter === product) {\n        return \"toggle-display in\";\n      } else {\n        return \"toggle-display\";\n      }\n    }\n  }\n\n  const mapRow = (product) => {\n    const thisProduct = data.filter(row => {return row[\"Product\"] === product});\n    thisProduct.sort((a, b) => (a[\"Department\"] > b[\"Department\"]) ? 1 : -1)\n    return thisProduct.map(row => <td className={checkIfDisplayed(product)}><Triangles row={row} /></td>)\n  }\n\n  return(\n    <Table>\n      <thead>\n        <th>\n          \n        </th>\n        <th style={{width: '17%'}}>\n          Body design\n        </th>\n        <th style={{width: '17%'}}>\n          Electronic systems\n        </th>\n        <th style={{width: '17%'}}>\n          Interior design\n        </th>\n        <th style={{width: '17%'}}>\n          Production engineering\n        </th>\n        <th style={{width: '17%'}}>\n          Vehicle performance development\n        </th>\n      </thead>\n      <tbody>\n        <tr>\n          <th className={checkIfDisplayed(\"Product 1\")}>\n            Product 1\n          </th>\n          {mapRow(\"Product 1\")}\n        </tr>\n        <tr>\n          <th className={checkIfDisplayed(\"Product 2\")}>\n            Product 2\n          </th>\n          {mapRow(\"Product 2\")}\n        </tr>\n        <tr>\n          <th className={checkIfDisplayed(\"Product 3\")}>\n            Product 3\n          </th>\n          {mapRow(\"Product 3\")}\n        </tr>\n        <tr>\n          <th className={checkIfDisplayed(\"Product 4\")}>\n            Product 4\n          </th>\n          {mapRow(\"Product 4\")}\n        </tr>\n        <tr>\n          <th className={checkIfDisplayed(\"Product 5\")}>\n            Product 5\n          </th>\n          {mapRow(\"Product 5\")}\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default TableScreen2;","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Components/Triangles.js",["192","193","194","195","196","197","198"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\n\nconst Triangles = ({row}) => {\n  const [width, setWidth] = useState(0);\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n    setWidth(elementRef.current.attrs.container.offsetWidth);\n\n  }, [elementRef.current]);\n\n  const getColor = (value) => {\n    if (value > 67) {\n      return '#DF2935';\n    } else if (value > 33) {\n      return '#EFEA5A';\n    } else {\n      return '#0DAB76';\n    }\n  };\n\n  const getStrokeColor = () => {\n    const topColor = getColor(row[\"% Schedule delays\"]);\n    const bottomColor = getColor(row[\"% Design Errors\"]);\n\n    if (topColor === '#DF2935' && bottomColor === '#DF2935' || topColor === '#DF2935' && bottomColor === '#EFEA5A' || topColor === '#EFEA5A' && bottomColor === '#DF2935') {\n      return '#A01821';\n    } else {\n      return 'lightgray';\n    }\n  };\n\n  const triangleWidth = width/2\n  const rectWidth = width\n\n  return(\n    <Stage ref={elementRef} width={rectWidth} height={40}>\n      <Layer>\n        <Line closed points={[5, 2, triangleWidth + 2, 2, triangleWidth + 2, 38]} fill={getColor(row[\"% Schedule delays\"])} stroke={getStrokeColor()} strokeWidth={2} />\n        <Line closed points={[2, 2, 2, 38, triangleWidth - 2, 38]} fill={getColor(row[\"% Design Errors\"])} stroke={getStrokeColor()} strokeWidth={2} />\n      </Layer>\n    </Stage>\n  );\n}\n\nexport default Triangles;","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Containers/Screen3Container.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/PartInfo.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/DesignReviewProcess.js",["199","200"],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/RiskAlerts.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/PredictedRisk.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/WorkflowsExecuted.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/SuggestedActions.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/RiskBar.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/DesignReviewChart.js",["201"],"import React, { useEffect, useState, useRef } from 'react';\nimport { VictoryChart, VictoryScatter, VictoryLine, VictoryAxis, VictoryBar, VictoryStack, VictoryLabel } from 'victory';\n\nconst DesignReviewChart = () => {\n  const [width, setWidth] = useState(0);\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n    setWidth(elementRef.current.offsetWidth)\n  }, [elementRef.current]);\n\n  return(\n    <div ref={elementRef}>\n\n    <VictoryChart \n      horizontal \n      maxDomain={{ x: 4.5, y: 150 }} \n      minDomain={{ x: 1.5, y: 0 }}\n      height={width/5}\n      width={width}\n      padding={{top: 1, bottom: 40, left: 55, right: 20}}\n      >\n      <VictoryStack>\n        <VictoryBar \n        data={[{ x: 3, y: 58 }]}\n        style={{\n          data: {fill: 'deepskyblue', width: width/30}\n        }}\n        />\n        <VictoryBar \n        data={[{ x: 3, y: 20}]}\n        style={{\n          data: {fill: 'transparent', width: width/30}\n        }}\n        />\n        <VictoryBar \n        data={[{ x: 3, y: 18}]}\n        style={{\n          data: {fill: 'deepskyblue', width: width/30}\n        }}\n        />\n        <VictoryBar \n        data={[{ x: 3, y: 6}]}\n        style={{\n          data: {fill: 'transparent', width: width/30}\n        }}\n        />\n        <VictoryBar \n        data={[{ x: 3, y: 2}]}\n        style={{\n          data: {fill: 'deepskyblue', width: width/30}\n        }}\n        />\n        <VictoryBar \n        data={[{ x: 3, y: 6}]}\n        style={{\n          data: {fill: 'transparent', width: width/30}\n        }}\n        />\n        <VictoryBar \n        data={[{ x: 3, y: 2}]}\n        style={{\n          data: {fill: 'deepskyblue', width: width/30}\n        }}\n        />\n        <VictoryBar \n        data={[{ x: 3, y: 8}]}\n        style={{\n          data: {fill: 'transparent', width: width/30}\n        }}\n        />\n      </VictoryStack>\n      <VictoryScatter \n        data={[{ x: 2, y: 60 }]}\n        style={{ data: { fill: \"#0DAB76\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 65 }]}\n        style={{ data: { fill: \"#0DAB76\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 70 }]}\n        style={{ data: { fill: \"#EFEA5A\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 75 }]}\n        style={{ data: { fill: \"#DF2935\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 96 }]}\n        style={{ data: { fill: \"#0DAB76\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 98 }]}\n        style={{ data: { fill: \"#0DAB76\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 100 }]}\n        style={{ data: { fill: \"#EFEA5A\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 101 }]}\n        style={{ data: { fill: \"#DF2935\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 106 }]}\n        style={{ data: { fill: \"#0DAB76\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 107 }]}\n        style={{ data: { fill: \"#0DAB76\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 108 }]}\n        style={{ data: { fill: \"#EFEA5A\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 109 }]}\n        style={{ data: { fill: \"#DF2935\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 114 }]}\n        style={{ data: { fill: \"#0DAB76\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 115 }]}\n        style={{ data: { fill: \"#0DAB76\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 116 }]}\n        style={{ data: { fill: \"#0DAB76\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryScatter \n        data={[{ x: 2, y: 117 }]}\n        style={{ data: { fill: \"#0DAB76\", stroke: \"lightgray\", strokeWidth: 1 } }}\n        size={width/70}\n      />\n      <VictoryLine \n        data={[\n          {x: 1.5, y: 120},\n          {x: 3.5, y: 120}\n        ]}\n        style={{labels: {fontSize: 10}}}\n        labels={({datum}) => {if (datum.x === 3.5) return \"System release deadline\"}}\n        labelComponent={\n          <VictoryLabel textAnchor=\"middle\" dy={-10} />\n        }\n      />\n      <VictoryAxis \n        dependentAxis \n        tickValues={[1, 60, 120]} \n        tickFormat={(tick) => {\n          if (tick === 1) {\n            return 'January 1';\n          } else if (tick === 60) {\n            return 'March 1';\n          } else if (tick === 120) {\n            return 'May 1'\n          }\n        }}\n      />\n      <VictoryAxis\n        \n        style={{\n          axis: {stroke: 'transparent'}\n        }}\n        tickValues={[2, 3]} \n        tickFormat={(tick) => {\n          if (tick === 2) {\n            return 'Review';\n          } else if (tick === 3) {\n            return 'Design';\n          }\n        }}\n        />\n    </VictoryChart>\n    </div>\n  );\n};\n\nexport default DesignReviewChart;","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen3/Components/EllipsePoint.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Components/TopTriangleIcon.js",["202","203","204","205"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Stage, Layer, Line, Text } from 'react-konva';\n\nconst TopTriangleIcon = () => {\n  return(\n    <Stage\n      width={20}\n      height={20}\n      // padding={{top: 10, bottom: 10}}\n    >\n      <Layer>\n        <Line \n          closed\n          fill=\"#DF2935\"\n          points={[0, 0, 20, 0, 20, 20]}\n        />\n      </Layer>\n    </Stage>\n  );\n};\n\nexport default TopTriangleIcon;","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen2/Components/BottomTriangleIcon.js",["206","207","208","209"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Stage, Layer, Line, Text } from 'react-konva';\n\nconst BottomTriangleIcon = () => {\n  return(\n    <Stage\n      width={20}\n      height={20}\n      // padding={{top: 10, bottom: 10}}\n    >\n      <Layer>\n        <Line \n          closed\n          fill=\"#0DAB76\"\n          points={[0, 0, 0, 20, 20, 20]}\n        />\n      </Layer>\n    </Stage>\n  );\n};\n\nexport default BottomTriangleIcon;","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Containers/Screen4Container.js",["210"],"import React from 'react';\nimport DropdownsContainer4 from './DropdownsContainer4';\nimport TableContainer4 from './TableContainer4';\nimport Table from 'react-bootstrap/Table';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Screen4Container = () => {\n  // this width thing is completely absolutely essential but also totally messed up\n  // fix it so it's responsive and looks good in more than just screenshots\n\n  return(\n    <Row  style={{width: '75vw'}}>\n      <Col xs={12}>\n        <div className=\"pt-2 px-3 d-block mx-auto w-100\">\n          <DropdownsContainer4 />\n        </div>\n        <div className=\"pt-2 px-3 d-block mx-auto w-100\">\n          <TableContainer4 />\n        </div>\n      </Col>\n    </Row>\n  )\n};\n\nexport default Screen4Container;\n// so here we have screen 4\n// if we're given a division, just display all parts for entire division\n// if subdivision, display for only that subdivision\n// otherwise it's weird because default screen doesn't have the links to screen 4\n// since subdivs aren't displayed by default\n\n// [product line dropdown] [severity dropdown] [time frame (dropdown? not sure what this is exactly)]\n\n// table\n// part | risk alerts (#) | blockers (#? str?) | process deviations (#)\n\n// ok we can easily generate this data right?\n\n// when you click on a subdivision\n// show 50 parts. \n// first 10 assigned to product line 1, next to product line 2, and so on\n// each with risk alerts and blockers and process devs set to a random number between 1 and 30. \n\n// when you click on a division\n// show 150 parts (or # of subdivisions * 50)\n// 50 per subdivision\n\n\n// you know what's REALLY missing from this screen? you have no idea where you are.\n// you need to show which subdivision you're looking at or whatever.\n\n\n\n// anyway... for now. for tomorrow. all we need is one lousy screen to share. clicking doesn't even have to work.","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Containers/DropdownsContainer4.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Components/DisplayDropdown4.js",["211"],"import React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport {v4 as uuidv4} from 'uuid';\n\nconst DisplayDropdown4 = ({ info }) => {\n  const mapOptions = () => {\n    return info.options.map(option => <option key={uuidv4()}>{option}</option>);\n  }\n\n  return(\n    <Form.Group controlId={info.title}>\n      <Form.Label>{info.title}</Form.Label>\n      {/* this system only works well for two dropdowns\n      if adding more use a switch function or something */}\n      <Form.Control size=\"sm\" as=\"select\">\n        {mapOptions()}\n      </Form.Control>\n    </Form.Group>\n  );\n};\n\nexport default DisplayDropdown4;","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Containers/TableContainer4.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Components/TableScreen4.js",["212"],"import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport PredictedRiskRectangle from './PredictedRiskRectangle';\n\nconst TableScreen4 = () => {\n  const history = useHistory();\n\n  const sendToPartsScreen = (e) => {\n    e.preventDefault();\n    history.push('/parts')\n  }\n\n  const mapRows = () => {\n    const rows = [];\n    for (let i = 1; i < 51; i++) {\n      rows.push(\n        <tr>\n          <td>\n            <a onClick={e => sendToPartsScreen(e)} href=\"\">Part {i}</a>\n          </td>\n          <td>\n            {rand10()}\n          </td>\n          <td>\n            {rand10()}\n          </td>\n          <td>\n            <PredictedRiskRectangle color={rectColor(rand10())} />\n          </td>\n        </tr>)\n\n    }\n    \n    // sorts by color then by part number\n    // when you change the part numbers to actually have names, sort by full name alphabetical order instead\n    // or this whole sort might not even be necessary if you have the actual numbers in advance rather than randomly generating them in real time\n    rows.sort((a, b) => (a.props.children[3].props.children.props.color < b.props.children[3].props.children.props.color) ? 1 : (a.props.children[3].props.children.props.color === b.props.children[3].props.children.props.color) ? ((a.props.children[0].props.children.props.children[1] > b.props.children[0].props.children.props.children[1]) ? 1 : -1 ) : -1);\n    \n    return rows.map(row => {console.log(row.props.children[0].props.children.props.children[1]); return row});\n  }\n\n  const rand10 = () => {\n    return Math.floor(Math.random() * 10) + 1\n  }\n\n  const rectColor = (risk) => {\n    if (risk >= 7) {\n      return 4;\n    } else if (risk >= 5) {\n      return 3;\n    } else if (risk >= 2) {\n      return 2;\n    } else {\n      return 1;\n    }\n  }\n\n  return(\n    <Table>\n      <thead>\n        <th>\n          Part\n        </th>\n        <th>\n          Risk Alerts\n        </th>\n        <th>\n          Process Deviations\n        </th>\n        <th>\n          Predicted Risk\n        </th>\n      </thead>\n      <tbody>\n        {mapRows()}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default TableScreen4;","/home/alyssa/code/projects/engineering-manager-proto-1/src/Screen4/Components/PredictedRiskRectangle.js",["213"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Stage, Layer, Rect } from 'react-konva';\n\nconst PredictedRiskRectangle = ({color}) => {\n  const [width, setWidth] = useState(0);\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n    setWidth(elementRef.current.attrs.container.offsetWidth);\n\n  }, [elementRef.current]);\n\n  const getColor = () => {\n    if (color === 4) {\n      return '#DF2935';\n    } else if (color === 3) {\n      return '#F58F29';\n    } else if (color === 2) {\n      return '#EFEA5A';\n    } else {\n      return '#0DAB76';\n    }\n  };\n\n\n  const rectWidth = width/2;\n\n  return(\n    <Stage ref={elementRef} width={rectWidth} height={40}>\n      <Layer>\n        <Rect \n          x={0}\n          y={10}\n          width={rectWidth/2}\n          height={20}\n          fill={getColor()}\n        />\n      </Layer>\n    </Stage>\n  );\n}\n\nexport default PredictedRiskRectangle;","/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Containers/TrendsPageContainer.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Containers/TrendsDropdownsContainer.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Components/TrendsDropdowns.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Containers/TrendsChartContainer.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Components/TrendsChart.js",["214","215"],"import React, { useState } from 'react'\nimport { VictoryChart, VictoryStack, VictoryAxis, VictoryBar } from 'victory'\nimport { trendsData } from '../../trendsData'\n\nconst TrendsChart = ({ reasonFilter, divisionFilter }) => {\n\n\n  const getData = (reason) => {\n\n    // gets data for that reason/color in chart\n    const reasonData = trendsData.filter(change => { return change.reason === reason })\n\n    const dataByYear = { '2016': 0, '2017': 0, '2018': 0, '2019': 0, '2020': 0 }\n\n    // for each data point, increment appropriate year in object\n    for (let i = 0; i < reasonData.length; i++) {\n      dataByYear[reasonData[i].year]++\n    }\n\n    const data = []\n\n    for (const year in dataByYear) {\n      data.push({ x: year, y: dataByYear[year] })\n    }\n\n    return data\n  }\n\n  // definitely a cleaner way to organize getData() and totalByYear()\n  const totalByYear = (reason, year) => {\n    if (reason === '(All)') {\n      const dataByYear = { '2016': 0, '2017': 0, '2018': 0, '2019': 0, '2020': 0 }\n\n      // for each data point, increment appropriate year in object\n      for (let i = 0; i < trendsData.length; i++) {\n        dataByYear[trendsData[i].year]++\n      }\n\n      return dataByYear[year]\n    }\n  }\n\n  const getReasonColor = () => {\n    switch(reasonFilter) {\n      case 'no error':\n        return ['#0DAB76']\n      case 'unavoidable revision':\n        return ['#EFEA5A']\n      case 'avoidable revision':\n        return ['#F58F29']\n      case 'design error':\n        return ['#DF2935']\n      default:\n        return ['#DF2935']\n    }\n  }\n\n  return (\n    // <div className=\"w-75 mx-auto\">\n\n    /* eventually, dropdown will determine which of these victorybars are displayed */\n\n    reasonFilter === '(All)' ?\n      <VictoryChart\n        height={200} width={400} domainPadding={{ x: 30, y: 20 }} padding={40}\n        maxDomain={{ y: 100 }}\n      >\n        <VictoryAxis\n          style={{ tickLabels: { fontSize: 10 }, grid: {stroke: 'grey', strokeWidth: 0.5, strokeDasharray: \"2, 2\"} }}\n        />\n        <VictoryAxis\n          dependentAxis\n          tickFormat={(tick) => `${tick}%`}\n          style={{ tickLabels: { fontSize: 10 }, grid: {stroke: 'grey', strokeWidth: 0.5, strokeDasharray: \"2, 2\"} }}\n        />\n        <VictoryStack\n          colorScale={['#0DAB76', '#EFEA5A', '#F58F29', '#DF2935']}\n          style={{ labels: { fontSize: 10 } }}\n        >\n          <VictoryBar data={getData('no error')}>\n          </VictoryBar>\n          <VictoryBar data={getData('unavoidable revision')}>\n          </VictoryBar>\n          <VictoryBar data={getData('avoidable revision')}>\n          </VictoryBar>\n          <VictoryBar data={getData('design error')}\n            // for now this total is a random number from 3000-5000\n            // should really be the totals for the whole thing, once we have better seed data. in that case use modified data.push for getData() \n            // but make it so you only see it once by having other label formats be invisible\n            labels={({ datum }) => (`${Math.floor(Math.random() * 2000 + 3001)}`)}\n          >\n          </VictoryBar>\n        </VictoryStack>\n        \n      </VictoryChart>\n      :\n      <VictoryChart\n        height={200} width={400} domainPadding={{ x: 30, y: 20 }} padding={40}\n        maxDomain={{ y: 100 }}\n      >\n        <VictoryAxis\n          style={{ tickLabels: { fontSize: 10 }, grid: {stroke: 'grey', strokeWidth: 0.5, strokeDasharray: \"2, 2\"} }}\n        />\n        <VictoryAxis\n          dependentAxis\n          tickFormat={(tick) => `${tick}%`}\n          style={{ tickLabels: { fontSize: 10 }, grid: {stroke: 'grey', strokeWidth: 0.5, strokeDasharray: \"2, 2\"} }}\n        />\n        <VictoryStack\n          colorScale={getReasonColor()}\n          style={{ labels: { fontSize: 10 } }}\n        >\n          <VictoryBar data={getData(reasonFilter)}\n            // for now this total is a random number from 3000-5000\n            // should really be the totals for the whole thing, once we have better seed data. in that case use modified data.push for getData() \n            // but make it so you only see it once by having other label formats be invisible\n            labels={({ datum }) => (`${Math.floor(Math.random() * 500 + 501)}`)}\n          >\n          </VictoryBar>\n        </VictoryStack>\n        \n      </VictoryChart>\n\n    // </div>\n  )\n}\n\nexport default TrendsChart","/home/alyssa/code/projects/engineering-manager-proto-1/src/trendsData.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/TrendsPage/Components/TrendsLegend.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Containers/Screen1Container.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Containers/DropdownsContainer1.js",["216"],"/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Containers/TableContainer1.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Components/DisplayDropdown1.js",[],"/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Components/TableScreen1.js",["217","218","219"],"/home/alyssa/code/projects/engineering-manager-proto-1/src/DashboardsAndKPIs/Components/PercentageMetricBar.js",["220"],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":12,"column":8,"nodeType":"227","messageId":"228","endLine":12,"endColumn":11},{"ruleId":"225","severity":1,"message":"229","line":13,"column":8,"nodeType":"227","messageId":"228","endLine":13,"endColumn":11},{"ruleId":"225","severity":1,"message":"230","line":4,"column":8,"nodeType":"227","messageId":"228","endLine":4,"endColumn":12},{"ruleId":"225","severity":1,"message":"231","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":26},{"ruleId":"225","severity":1,"message":"232","line":1,"column":28,"nodeType":"227","messageId":"228","endLine":1,"endColumn":36},{"ruleId":"225","severity":1,"message":"233","line":1,"column":38,"nodeType":"227","messageId":"228","endLine":1,"endColumn":44},{"ruleId":"225","severity":1,"message":"234","line":2,"column":8,"nodeType":"227","messageId":"228","endLine":2,"endColumn":13},{"ruleId":"225","severity":1,"message":"235","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":15},{"ruleId":"225","severity":1,"message":"236","line":3,"column":17,"nodeType":"227","messageId":"228","endLine":3,"endColumn":22},{"ruleId":"225","severity":1,"message":"237","line":3,"column":24,"nodeType":"227","messageId":"228","endLine":3,"endColumn":28},{"ruleId":"225","severity":1,"message":"238","line":5,"column":16,"nodeType":"227","messageId":"228","endLine":5,"endColumn":22},{"ruleId":"225","severity":1,"message":"239","line":7,"column":8,"nodeType":"227","messageId":"228","endLine":7,"endColumn":20},{"ruleId":"240","severity":1,"message":"241","line":11,"column":6,"nodeType":"242","endLine":11,"endColumn":26,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":27,"column":32,"nodeType":"246","messageId":"247","endLine":27,"endColumn":34},{"ruleId":"244","severity":1,"message":"245","line":27,"column":61,"nodeType":"246","messageId":"247","endLine":27,"endColumn":63},{"ruleId":"244","severity":1,"message":"248","line":27,"column":61,"nodeType":"246","messageId":"247","endLine":27,"endColumn":63},{"ruleId":"244","severity":1,"message":"248","line":27,"column":87,"nodeType":"246","messageId":"247","endLine":27,"endColumn":89},{"ruleId":"244","severity":1,"message":"248","line":27,"column":116,"nodeType":"246","messageId":"247","endLine":27,"endColumn":118},{"ruleId":"244","severity":1,"message":"248","line":27,"column":142,"nodeType":"246","messageId":"247","endLine":27,"endColumn":144},{"ruleId":"225","severity":1,"message":"249","line":2,"column":8,"nodeType":"227","messageId":"228","endLine":2,"endColumn":13},{"ruleId":"225","severity":1,"message":"250","line":3,"column":8,"nodeType":"227","messageId":"228","endLine":3,"endColumn":19},{"ruleId":"240","severity":1,"message":"241","line":10,"column":6,"nodeType":"242","endLine":10,"endColumn":26,"suggestions":"251"},{"ruleId":"225","severity":1,"message":"232","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":25},{"ruleId":"225","severity":1,"message":"231","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":36},{"ruleId":"225","severity":1,"message":"233","line":1,"column":38,"nodeType":"227","messageId":"228","endLine":1,"endColumn":44},{"ruleId":"225","severity":1,"message":"252","line":2,"column":30,"nodeType":"227","messageId":"228","endLine":2,"endColumn":34},{"ruleId":"225","severity":1,"message":"232","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":25},{"ruleId":"225","severity":1,"message":"231","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":36},{"ruleId":"225","severity":1,"message":"233","line":1,"column":38,"nodeType":"227","messageId":"228","endLine":1,"endColumn":44},{"ruleId":"225","severity":1,"message":"252","line":2,"column":30,"nodeType":"227","messageId":"228","endLine":2,"endColumn":34},{"ruleId":"225","severity":1,"message":"249","line":4,"column":8,"nodeType":"227","messageId":"228","endLine":4,"endColumn":13},{"ruleId":"225","severity":1,"message":"229","line":2,"column":8,"nodeType":"227","messageId":"228","endLine":2,"endColumn":11},{"ruleId":"253","severity":1,"message":"254","line":20,"column":13,"nodeType":"255","endLine":20,"endColumn":60},{"ruleId":"240","severity":1,"message":"241","line":11,"column":6,"nodeType":"242","endLine":11,"endColumn":26,"suggestions":"256"},{"ruleId":"225","severity":1,"message":"232","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":25},{"ruleId":"225","severity":1,"message":"257","line":30,"column":9,"nodeType":"227","messageId":"228","endLine":30,"endColumn":20},{"ruleId":"225","severity":1,"message":"230","line":4,"column":8,"nodeType":"227","messageId":"228","endLine":4,"endColumn":12},{"ruleId":"225","severity":1,"message":"258","line":3,"column":8,"nodeType":"227","messageId":"228","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"254","line":116,"column":13,"nodeType":"255","endLine":116,"endColumn":86},{"ruleId":"253","severity":1,"message":"254","line":118,"column":13,"nodeType":"255","endLine":118,"endColumn":83},{"ruleId":"240","severity":1,"message":"241","line":10,"column":6,"nodeType":"242","endLine":10,"endColumn":26,"suggestions":"259"},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Form' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Konva' is defined but never used.","'Stage' is defined but never used.","'Layer' is defined but never used.","'Line' is defined but never used.","'uuidv4' is defined but never used.","'EllipsePoint' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'elementRef.current'. Either exclude it or remove the dependency array. Mutable values like 'elementRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["262"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'Table' is defined but never used.","'ProgressBar' is defined but never used.",["263"],"'Text' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["264"],"'totalByYear' is assigned a value but never used.","'Button' is defined but never used.",["265"],"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"266","fix":"268"},{"desc":"266","fix":"269"},{"desc":"266","fix":"270"},"Update the dependencies array to be: []",{"range":"271","text":"272"},{"range":"273","text":"272"},{"range":"274","text":"272"},{"range":"275","text":"272"},[307,327],"[]",[364,384],[322,342],[349,369]]